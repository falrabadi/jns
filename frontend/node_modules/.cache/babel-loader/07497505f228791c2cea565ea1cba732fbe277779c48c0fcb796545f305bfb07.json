{"ast":null,"code":"useEffect(() => {\n  const fetchProducts = async () => {\n    try {\n      const data = await getProducts();\n      console.log('Products data:', data); // Log the data received from getProducts()\n      if (Array.isArray(data)) {\n        setProducts(data);\n      } else {\n        setError('Products data is not an array.');\n      }\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      setError('Failed to fetch products.');\n    }\n  };\n  fetchProducts();\n}, []);","map":{"version":3,"names":["useEffect","fetchProducts","data","getProducts","console","log","Array","isArray","setProducts","setError","error"],"sources":["/home/falrabadi/workspace/projects/jns/frontend/src/services/productService.js"],"sourcesContent":["useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const data = await getProducts();\n        console.log('Products data:', data); // Log the data received from getProducts()\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          setError('Products data is not an array.');\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError('Failed to fetch products.');\n      }\n    };\n  \n    fetchProducts();\n  }, []);\n  "],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACZ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMC,WAAW,CAAC,CAAC;MAChCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC,CAAC,CAAC;MACrC,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;QACvBM,WAAW,CAACN,IAAI,CAAC;MACnB,CAAC,MAAM;QACLO,QAAQ,CAAC,gCAAgC,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDD,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAEDR,aAAa,CAAC,CAAC;AACjB,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}